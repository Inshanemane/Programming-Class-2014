# A program that draws a background image on the canvas with a banner 
# message over it that streams across the bottom.  

import simplegui
import random

FRAME_WIDTH = 400
FRAME_HEIGHT = 400
colour_location = 0

money = simplegui.load_image('http://watsupplies.com/wp-content/uploads/2014/10/money-pppp.png')

background = 'joe'

sky = simplegui.load_image('http://upload.wikimedia.org/wikipedia/commons/1/16/Appearance_of_sky_for_weather_forecast,_Dhaka,_Bangladesh.JPG')

class Banner:
    def __init__(self, message, pos, colour, size, vel, acc):
       self.message = message
       self.pos = pos
       self.colour = colour
       self.size = size
       self.vel = vel
       self.acc = acc
        
    def draw(self,canvas):
        canvas.draw_text(self.message, self.pos, self.size, self.colour)
        
    def update(self):
        # x += v
        for i in range(2):
            self.pos[i] += self.vel[i]
        self.pos[0] = self.pos[0] % FRAME_WIDTH
        self.pos[1] = self.pos[1] % FRAME_HEIGHT
        if self.pos[0] >= 200:
            self.vel[0] -=10
    def set_text(self, new_message):
        if len(new_message) > 0:
            self.message = new_message
    def get_text(self):
        return self.message        
    def set_colour(self, new_colour):
        self.colour = new_colour
   
        
        
# Handler for mouse click
def message_handler(text_input):
    pass


def click_message_change():
    banner.set_text(inp.get_text()) 

    
    
#Manual colour change
def message_handler2(text_input):
    pass
    
def colour_change():
    banner.colour = inp2.get_text()

    
    
# Handler to draw on canvas
def draw(canvas):        
    if background == 'not joe':        
        canvas.draw_image(sky, (sky.get_width() / 2, sky.get_height() / 2), (sky.get_width(), sky.get_height()), (200, 200), (400, 400),)
    if banner.get_text() == '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$':        
        canvas.draw_image(money, (money.get_width() / 2, money.get_height() / 2), (money.get_width(), money.get_height()), (200, 200), (400, 400),)
    banner.draw(canvas)
    banner.update()

def timer_handler():
    new_colour = "#"
    for i in range(6):
        new_colour += random.choice(['0','1','2','3','4','5',
                                    '6','7','8','9',
                                    'A','B','C','E','F'])
    
    banner.colour = new_colour
   
    
def keydown(key):
    if key == simplegui.KEY_MAP['left']:
        banner.vel[0] -= 1
    elif key == simplegui.KEY_MAP['right']:
        banner.vel[0] += banner.acc
    elif key == simplegui.KEY_MAP['up']:
        banner.vel[1] -= 1
    elif key == simplegui.KEY_MAP['down']:
        banner.vel[1] += banner.acc   
     
      
def keyup(key): 
    global new_colour, background
    if key == simplegui.KEY_MAP['r']:
        banner.pos[0] = 130
        banner.pos[1] = 200
        
    elif key == simplegui.KEY_MAP['z']:     
        banner.vel[0] = 0
        banner.vel[1] = 0
        
    elif key == simplegui.KEY_MAP['q']:     
        banner.set_text('>>[]||||[]\/\(O)>')
        banner.vel[0] = 0
        banner.vel[1] = 0
        banner.pos[0] = 130
        banner.pos[1] = 200
        timer.start()
        background = 'joe'
    elif key == simplegui.KEY_MAP['4']:
        banner.set_text('$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$')        
        timer.stop()
        banner.colour = 'yellow'
        banner.vel[0] = 90
        banner.vel[1] = 900
        
    elif key == simplegui.KEY_MAP['o']:
        timer.stop()
    
    elif key == simplegui.KEY_MAP['p']:
        timer.start()
  
    elif key == simplegui.KEY_MAP['b']:     
        background = 'not joe'
        
# Create a frame and assign callbacks to event handlers
frame = simplegui.create_frame("FLY", FRAME_WIDTH, FRAME_HEIGHT)
timer = simplegui.create_timer(100, timer_handler)
frame.set_draw_handler(draw)

frame.set_keyup_handler(keydown)
frame.set_keydown_handler(keyup)


# Start the frame animation
banner = Banner(">>[]||||[]\/\(O)>", [50,250], "blue", 24, [1,0], 1)
inp = frame.add_input('Change message', message_handler, 100)
frame.add_button("Confirm", click_message_change)
inp2 = frame.add_input('Change colour', message_handler2, 100)
frame.add_button("Confirm", colour_change)
frame.add_label('')
frame.add_label('q : Full Reset')
frame.add_label('r : Reset')
frame.add_label('z : Stop')
frame.add_label('4 : Money')
frame.add_label('b : Change background')
frame.add_label('')
frame.add_label('Automatic Colour')
frame.add_label('------------------')
frame.add_label('p : Start')
frame.add_label('o : Stop')
frame.start()
